networks:
  revProxy-net:
    external: true

secrets:
  db_password:
    file: db_password.txt
  secret_key:
    file: secret_key.txt

volumes:
  pgadmin-data:


services:
  yt-db:
    image: postgres:16.2-alpine3.19
    # postgres:14.10-alpine3.18
    container_name: yt-db
    ports:
      - 5432:5432
    restart: always
    env_file:
      - .env
    secrets:
      - db_password
    networks:
      - revProxy-net
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${DB_LOCATION}:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      # Autoheal
      - "autoheal.enable=true"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  yt-diff:
    # image: purevert/yt-diff:amd64
    image: ghcr.io/sagnikdas53/yt-diff:master
    container_name: yt-diff
    restart: always
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     # This is used to build the frontend in the docker image
    #     - VITE_BASE_PATH=${BASE_URL}
    volumes:
      - ${HOST_SAVE_PATH}:/${SAVE_PATH}
    depends_on:
      yt-db:
        condition: service_healthy
    networks:
      - revProxy-net
    # expose:
    #   - ${PORT}
    # ports:
    #   - ${PORT}:${PORT}
    secrets:
      - db_password
      - secret_key
    environment:
      - PROTOCOL=${PROTOCOL}
      - HOSTNAME=${HOSTNAME}
      - PORT=${PORT}
      - BASE_URL=${BASE_URL}
      - HIDE_PORTS=${HIDE_PORTS}
      - USE_NATIVE_HTTPS=${NATIVE_HTTPS_SUPPORT}
      # Database configuration
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - SECRET_KEY_FILE=/run/secrets/secret_key
      # Download configuration
      - SAVE_PATH=${SAVE_PATH}
      - SLEEP=${SLEEP}
      - CHUNK_SIZE_DEFAULT=${CHUNK_SIZE_DEFAULT}
      - SAVE_SUBTITLES=${SAVE_SUBTITLES}
      - SAVE_DESCRIPTION=${SAVE_DESCRIPTION}
      - SAVE_COMMENTS=${SAVE_COMMENTS}
      - SAVE_THUMBNAIL=${SAVE_THUMBNAIL}
      # Update configuration
      - TZ_PREFERRED=${TZ_PREFERRED}
      - UPDATE_SCHEDULED=${UPDATE_SCHEDULED}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ytdiff.entryPoints=web,websecure"
      - "traefik.http.routers.ytdiff.rule=Host(`${HOSTNAME}`) && PathPrefix(`${BASE_URL}`)"
      - "traefik.http.services.ytdiff.loadbalancer.server.port=${PORT}"
      - "traefik.http.services.ytdiff.loadBalancer.passHostHeader=true"
      - "traefik.http.routers.ytdiff.middlewares=http-to-https@docker"
      - "traefik.http.routers.ytdiff.tls=true"
      - "traefik.http.routers.ytdiff.tls.certresolver=tailsolver"
      - "traefik.http.routers.ytdiff.tls.domains[0].main=${HOSTNAME}"
      - "com.centurylinklabs.watchtower.enable=true"
      # Autoheal
      - "autoheal.enable=true"
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8888/ytdiff" ]
      interval: 5m
      timeout: 5s
      start_period: 30s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    # ports:
    #   - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
      SCRIPT_NAME: /pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      yt-db:
        condition: service_healthy
    # ports:
    #   - 8080:8080
    networks:
      - revProxy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entryPoints=web,websecure"
      - "traefik.http.routers.pgadmin.rule=Host(`${HOSTNAME}`) && PathPrefix(`/pgadmin`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.services.pgadmin.loadBalancer.passHostHeader=true"
      - "traefik.http.routers.pgadmin.middlewares=http-to-https@docker"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=tailsolver"
      - "traefik.http.routers.pgadmin.tls.domains[0].main=${HOSTNAME}"
      - "com.centurylinklabs.watchtower.enable=true"
      # Autoheal
      - "autoheal.enable=true"
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:80/pgadmin/misc/ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
