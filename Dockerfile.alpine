# Stage 0: Define global arguments
ARG TARGETARCH
ARG NODE_VERSION=20.11.1
ARG VITE_BASE_PATH=/ytdiff

# ---- Stage 1: Frontend Builder (Node Alpine based) ----
# This stage builds the React frontend using an official Node Alpine image
FROM node:${NODE_VERSION}-alpine AS frontend-builder

ARG VITE_BASE_PATH
ENV VITE_BASE_PATH=${VITE_BASE_PATH}

WORKDIR /app

# Install git for cloning the repository
RUN apk update && \
    apk add --no-cache git ca-certificates

# Clone the frontend repository, install dependencies, and build
RUN git clone -b material https://github.com/sagniKdas53/yt-diff-react ./frontend_src
WORKDIR /app/frontend_src
RUN npm install
RUN npm run build

# ---- Stage 2: Final Application Image (Node Alpine based) ----
FROM alpine:3.21.3 AS final

ARG VITE_BASE_PATH

ENV LANG=C.UTF-8
ENV NODE_ENV=production
# From original Dockerfile, may or may not be needed/effective on Alpine
ENV OPENSSL_CONF=/dev/null 
# If your backend Node.js app needs this
ENV VITE_BASE_PATH=${VITE_BASE_PATH} 

WORKDIR /app

# Install runtime dependencies: tini as an init process.
# ca-certificates is usually included in the base node alpine image.
# Add gcompat if you absolutely need to try running glibc binaries (experimental, may not work for all cases)
# RUN apk add --no-cache tini gcompat
RUN apk update && \
    apk add --no-cache tini yt-dlp ca-certificates wget nodejs npm

# Copy built frontend assets from the frontend-builder stage
# IMPORTANT: Adjust './public' if your Node.js server (index.js) expects frontend assets in a different directory
COPY --from=frontend-builder /app/dist ./dist

# Copy backend application files
COPY package.json package-lock.json* ./
COPY index.js ./

# Install backend Node.js dependencies for production
RUN npm install --omit=dev

# Create a non-root user and group for running the application
# Alpine's addgroup/adduser are slightly different
RUN addgroup -S -g 1000 ytdiff && \
    adduser -S -u 1000 -G ytdiff -s /sbin/nologin ytdiff && \
    # Create cache directory with proper permissions
    mkdir -p /home/ytdiff/.cache/yt-dlp && \
    chown -R ytdiff:ytdiff /home/ytdiff && \
    # Ensure the app directory exists and set ownership
    mkdir -p /app && chown -R ytdiff:ytdiff /app

USER ytdiff

EXPOSE 8888

# Use tini as the entrypoint to handle signals and reap zombie processes
ENTRYPOINT [ "/sbin/tini", "--" ]
CMD [ "node", "index.js" ]